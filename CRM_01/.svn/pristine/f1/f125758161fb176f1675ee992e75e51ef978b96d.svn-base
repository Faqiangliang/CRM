package com.itheima.crm.dao.impl;

import java.io.Serializable;
import java.util.List;

import org.hibernate.criterion.DetachedCriteria;
import org.hibernate.criterion.Projections;
import org.springframework.orm.hibernate5.support.HibernateDaoSupport;

import com.itheima.crm.dao.BaseDao;

public class BaseDaoImpl<T> extends HibernateDaoSupport implements BaseDao<T> {
	
	private Class clazz;
	public BaseDaoImpl(Class clazz){
		this.clazz=clazz;
	}
	
	@Override
	public void save(T t) {
		// TODO Auto-generated method stub
		getHibernateTemplate().save(t);
	}

	@Override
	public void delete(T t) {
		// TODO Auto-generated method stub
		getHibernateTemplate().delete(t);
	}

	@Override
	public void update(T t) {
		// TODO Auto-generated method stub
		getHibernateTemplate().update(t);
	}

	@Override
	public List<T> findAll() {
		// TODO Auto-generated method stub
		DetachedCriteria criteria = DetachedCriteria.forClass(clazz);

		return (List<T>) getHibernateTemplate().findByCriteria(criteria);
	}

	@Override
	public T findByID(Serializable id) {
		// TODO Auto-generated method stub
		
		return (T) getHibernateTemplate().get(clazz, id);
	}

	@Override
	public int findCount(DetachedCriteria detachedCriteria) {
		// TODO Auto-generated method stub
		detachedCriteria.setProjection(Projections.rowCount());
		List<Long> list = (List<Long>) getHibernateTemplate().findByCriteria(detachedCriteria);
		if(list.size()>0){
			return list.get(0).intValue();
		}
		return 0;
	}

	@Override
	public List<T> findByPage(DetachedCriteria detachedCriteria, int currentPage, int pageSize) {
		// TODO Auto-generated method stub
		detachedCriteria.setProjection(null);
		
		return (List<T>) getHibernateTemplate().findByCriteria(detachedCriteria, currentPage, pageSize);
	}

}
